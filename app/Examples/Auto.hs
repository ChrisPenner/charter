{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
module Examples.Auto where

import qualified Data.Text as T
import Data.Aeson

import Charts

myData :: [(T.Text, Int, Int)]
myData = [ ("A", 16, 20)
         , ("B", 11, 23)
         , ("C", 9, 25)
         , ("D", 8, 34)
         ]


chartData :: (String, String, Int, String, Int)
chartData = 
     -- ("My team has needed to manually fix an error in an sdk generated by mscli, or has experienced a breakage due to sdk-gen in the last 1 month", "No", 17, "Yes", 18)
     -- ("My team has investigated a bug related to sso and/or transferring between apps in the last 1 month", "No", 9, "Yes", 13)
     -- ("I’ve been surprised by the behaviour of an IAM interaction in the last 1 month", "No", 25, "Yes", 6)
     -- ("Regenerating and publishing sdks every time we make changes to my protos is annoying or disrupting to my team’s workflow", "No", 20, "Yes", 11)
     -- ("My team has investigated a bug related to incorrect or expired sessions in the last 1 month", "No", 26, "Yes", 4)
     -- ("When interacting with IAM I feel confident about the behaviour of my code without explicitly testing the endpoints involved", "Yes", 4, "No", 27)
     -- ("I feel I understand roughly how sso and session transferring works", "Yes", 7, "No", 28)
     ("I’ve been unsure of which workflow to follow to get the information I need from IAM in the last 1 month", "No", 6, "Yes", 24)

myAutoChart :: Chart
myAutoChart = autoChartWithHeaders (ChartOptions $ object ["title" .= title, "slices" .= object ["0" .= object ["color" .= ("blue" :: String)], "1" .= object ["color" .= ("red" :: String)]]]) PieChart headers [(a, a'), (b, b')]
  where
    (title, a, a', b, b') = chartData

headers :: [Column]
headers = [StringColumn "Answer", NumberColumn "#"]


teamData :: [(String, Int)]
teamData = [ ("Yes", 17)
           , ("No", 18)
           ]
